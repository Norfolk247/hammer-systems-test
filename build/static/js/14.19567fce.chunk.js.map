{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/general/clients/list/UserList.js","views/app-views/general/clients/list/UserEdit.js","views/app-views/general/clients/list/index.js"],"names":["renderAvatar","props","_jsx","Avatar","_objectSpread","className","concat","type","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","UserList","_ref","match","console","log","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","isLoading","setIsLoading","tableColumns","title","dataIndex","sorter","compare","a","b","toLowerCase","render","_","record","Link","to","url","email","useEffect","fetchUsers","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetch","then","response","ok","json","stop","apply","arguments","Loading","cover","Card","bodyStyle","Table","columns","dataSource","rowKey","UserEdit","useParams","_useForm","useForm","form","fetchUser","data","setFieldsValue","username","phoneNumber","phone","website","address","street","city","postcode","zipcode","_Fragment","Form","layout","initialValues","onFinish","values","key","message","loading","content","setTimeout","success","duration","onFinishFailed","errorInfo","Row","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","Input","Button","htmlType","UserListMenu","Switch","Route","exact","path"],"mappings":"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","file":"static/js/14.19567fce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, Table} from \"antd\";\r\nimport AvatarStatus from \"../../../../../components/shared-components/AvatarStatus\";\r\nimport Loading from \"../../../../../components/shared-components/Loading\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst UserList = ({match}) => {\r\n    console.log(match)\r\n    const [users,setUsers] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const tableColumns = [\r\n        {\r\n            title: 'Имя',\r\n            dataIndex: 'name',\r\n            sorter: {\r\n                compare: (a, b) => {\r\n                    a = a.name.toLowerCase();\r\n                    b = b.name.toLowerCase();\r\n                    return a > b ? -1 : b > a ? 1 : 0;\r\n                },\r\n            },\r\n            render: (_, record) => (\r\n                <div className=\"d-flex\">\r\n                    <Link to={`${match.url}/${record.id}`}>\r\n                        <AvatarStatus name={record.name} subTitle={record.email}/>\r\n                    </Link>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Телефон',\r\n            dataIndex: 'phone',\r\n            sorter: {\r\n                compare: (a, b) => {\r\n                    a = a.name.toLowerCase();\r\n                    b = b.name.toLowerCase();\r\n                    return a > b ? -1 : b > a ? 1 : 0;\r\n                },\r\n            },\r\n        },\r\n        {\r\n            title: 'Сайт',\r\n            dataIndex: 'website',\r\n            sorter: {\r\n                compare: (a, b) => {\r\n                    a = a.name.toLowerCase();\r\n                    b = b.name.toLowerCase();\r\n                    return a > b ? -1 : b > a ? 1 : 0;\r\n                },\r\n            },\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        const fetchUsers = async () => {\r\n            setIsLoading(true)\r\n            await fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(setUsers)\r\n                } else {\r\n                    setUsers([])\r\n                }\r\n            })\r\n            setIsLoading(false)\r\n        }\r\n        fetchUsers()\r\n    },[])\r\n    if (isLoading) {\r\n        return (<Loading cover='content'/>)\r\n    }\r\n    return (\r\n        <Card bodyStyle={{'padding': '0px'}}>\r\n            <Table columns={tableColumns} dataSource={users} rowKey='id' />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\r\nimport Loading from \"../../../../../components/shared-components/Loading\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useForm} from \"antd/es/form/Form\";\r\n\r\nconst UserEdit = () => {\r\n    const {id} = useParams()\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [form] = useForm()\r\n    let defaultValues = {\r\n        name: '',\r\n        email: '',\r\n        username: '',\r\n        phoneNumber: '',\r\n        website: '',\r\n        address: '',\r\n        city: '',\r\n        postcode: ''\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const fetchUser = async () => {\r\n            setIsLoading(true)\r\n            await fetch(`https://jsonplaceholder.typicode.com/users/${id}`).then(response=>{\r\n                if (response.ok) {\r\n                    response.json().then(data=>{\r\n                        form.setFieldsValue({\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            username: data.username,\r\n                            phoneNumber: data.phone,\r\n                            website: data.website,\r\n                            address: data.address.street,\r\n                            city: data.address.city,\r\n                            postcode: data.address.zipcode\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            setIsLoading(false)\r\n        }\r\n        fetchUser()\r\n    },[])\r\n\r\n    const onFinish = values => {\r\n        const key = 'updatable';\r\n        message.loading({ content: 'Updating...', key });\r\n        setTimeout(() => {message.success({ content: 'Done!', key, duration: 2 })}, 1000);\r\n    };\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (<Loading cover='content'/>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mt-4\">\r\n                <Form\r\n                    form={form}\r\n                    name=\"basicInformation\"\r\n                    layout=\"vertical\"\r\n                    initialValues={defaultValues}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={16}>\r\n                            <Row gutter={ROW_GUTTER}>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your name!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your username!'\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{\r\n                                            required: true,\r\n                                            type: 'email',\r\n                                            message: 'Please enter a valid email!'\r\n                                        }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Phone Number\"\r\n                                        name=\"phoneNumber\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Website\"\r\n                                        name=\"website\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24}>\r\n                                    <Form.Item\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"City\"\r\n                                        name=\"city\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={12}>\r\n                                    <Form.Item\r\n                                        label=\"Post code\"\r\n                                        name=\"postcode\"\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Save Change\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEdit;\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport UserList from \"./UserList\";\r\nimport UserEdit from \"./UserEdit\";\r\n\r\nconst UserListMenu = ({match}) => {\r\n    return (\r\n        <Switch>\r\n\t\t\t<Route exact path={match.url}>\r\n\t\t\t\t<UserList match={match}/>\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path={`${match.url}/:id`}>\r\n\t\t\t\t<UserEdit match={match}/>\r\n\t\t\t</Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default UserListMenu;"],"sourceRoot":""}